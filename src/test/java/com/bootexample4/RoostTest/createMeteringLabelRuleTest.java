/*
Test generated by RoostGPT for test metering-integration using AI Type Open AI and AI Model gpt-4

{
  background: null,
  rule: null,
  scenario: 'Create Metering Label Rule\n' +
    '    When I send a POST request to "/v2.0/metering/metering-label-rules" with the following payload:\n' +
    '      """\n' +
    '      {\n' +
    '        "remote_ip_prefix": "10.0.1.0/24",\n' +
    '        "direction": "ingress",\n' +
    '        "metering_label_id": "e131d186-b02d-4c0b-83d5-0c0725c4f812",\n' +
    '        "id": "00e13b58-b4f2-4579-9c9c-7ac94615f9ae",\n' +
    '        "excluded": false\n' +
    '      }\n' +
    '      """\n' +
    '    Then the response status code should be 201\n' +
    '    And the response should be in JSON\n' +
    '    And the response should contain the created metering label rule:\n' +
    '      | remote_ip_prefix | direction | metering_label_id                        | id                                   | excluded |\n' +
    '      | 10.0.1.0/24      | ingress   | e131d186-b02d-4c0b-83d5-0c0725c4f812   | 00e13b58-b4f2-4579-9c9c-7ac94615f9ae | false    |',
  title: 'Create Metering Label Rule'
}

*/
package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

public class createMeteringLabelRuleTest {

    @Test
    public void createMeteringLabelRule() {

        // Set the base URL
        RestAssured.baseURI = System.getenv("ROOST_SERVER_URL");

        // Define the payload
        String payload = "{\n" +
                "  \"remote_ip_prefix\": \"10.0.1.0/24\",\n" +
                "  \"direction\": \"ingress\",\n" +
                "  \"metering_label_id\": \"e131d186-b02d-4c0b-83d5-0c0725c4f812\",\n" +
                "  \"id\": \"00e13b58-b4f2-4579-9c9c-7ac94615f9ae\",\n" +
                "  \"excluded\": false\n" +
                "}";

        // Send POST request and validate the response
        Response response = given()
                .contentType(ContentType.JSON)
                .body(payload)
                .when()
                .post("/v2.0/metering/metering-label-rules")
                .then()
                .assertThat()
                .statusCode(201)
                .and()
                .contentType(ContentType.JSON)
                .and()
                .body("remote_ip_prefix", equalTo("10.0.1.0/24"))
                .body("direction", equalTo("ingress"))
                .body("metering_label_id", equalTo("e131d186-b02d-4c0b-83d5-0c0725c4f812"))
                .body("id", equalTo("00e13b58-b4f2-4579-9c9c-7ac94615f9ae"))
                .body("excluded", equalTo(false))
                .extract()
                .response();

        // Print the response
        System.out.println(response.asString());
    }
}
