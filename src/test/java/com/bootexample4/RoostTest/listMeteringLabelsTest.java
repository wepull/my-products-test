/*
Test generated by RoostGPT for test metering-integration using AI Type Open AI and AI Model gpt-4

{
  background: null,
  rule: null,
  scenario: 'List Metering Labels\n' +
    '    When I send a GET request to "/v2.0/metering/metering-labels"\n' +
    '    Then the response status code should be 200\n' +
    '    And the response should be in JSON\n' +
    '    And the response should contain the following metering labels:\n' +
    '      | id                                   | tenant_id                           | description            | name   |\n' +
    '      | a6700594-5b7a-4105-8bfe-723b346ce866 | 45345b0ee1ea477fac0f541b2cb79cd4   | label1 description     | label1 |\n' +
    '      | e131d186-b02d-4c0b-83d5-0c0725c4f812 | 45345b0ee1ea477fac0f541b2cb79cd4   | label2 description     | label2 |',
  title: 'List Metering Labels'
}

*/
package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Test;
import java.util.Map;
import static org.hamcrest.Matchers.*;

public class listMeteringLabelsTest {

    @Test
    public void testListMeteringLabels() {

        // Base URL
        RestAssured.baseURI = System.getenv("ROOST_SERVER_URL");

        // Send GET request
        Response response = RestAssured.given()
                .contentType(ContentType.JSON)
                .get("/v2.0/metering/metering-labels");

        // Assert status code and content type
        response.then()
                .statusCode(200)
                .contentType(ContentType.JSON);

        // Assert metering labels
        Map<String, Object> expectedMeteringLabel1 = Map.of(
                "id", "a6700594-5b7a-4105-8bfe-723b346ce866",
                "tenant_id", "45345b0ee1ea477fac0f541b2cb79cd4",
                "description", "label1 description",
                "name", "label1"
        );
        Map<String, Object> expectedMeteringLabel2 = Map.of(
                "id", "e131d186-b02d-4c0b-83d5-0c0725c4f812",
                "tenant_id", "45345b0ee1ea477fac0f541b2cb79cd4",
                "description", "label2 description",
                "name", "label2"
        );
        response.then()
                .body("$", hasItems(expectedMeteringLabel1, expectedMeteringLabel2));
    }
}
