/*
Test generated by RoostGPT for test Integration-RestAssuredTest using AI Type Open AI and AI Model gpt-4

{
  background: null,
  rule: null,
  scenario: 'Delete an existing product\r\n' +
    '    Given there is an existing product with ID 1\r\n' +
    '    When the client sends a DELETE request to "/api/products/1"\r\n' +
    '    Then the response status code should be 200\r\n' +
    '    And the product with ID 1 should no longer exist',
  title: 'Delete an existing product'
}

*/
package com.bootexample4.RoostTest;

import org.junit.jupiter.api.Test;
import static org.hamcrest.Matchers.*;
import static io.restassured.RestAssured.given;
import io.restassured.http.ContentType;

public class deleteAnExistingProductTest {

    private static final String ROOST_SERVER_URL = System.getenv("ROOST_SERVER_URL");

    @Test
    public void deleteAnExistingProduct() {
        // Given there is an existing product with ID 1
        given()
                .contentType(ContentType.JSON)
                .pathParam("productId", 1)
                .when()
                .get(ROOST_SERVER_URL + "/products/{productId}")
                .then()
                .statusCode(200)
                .body("id", equalTo(1));

        // When the client sends a DELETE request to "/api/products/1"
        given()
                .contentType(ContentType.JSON)
                .pathParam("productId", 1)
                .when()
                .delete(ROOST_SERVER_URL + "/products/{productId}")
                .then()
                // Then the response status code should be 200
                .statusCode(200)
                .body(equalTo("Product deleted"));

        // And the product with ID 1 should no longer exist
        given()
                .contentType(ContentType.JSON)
                .pathParam("productId", 1)
                .when()
                .get(ROOST_SERVER_URL + "/products/{productId}")
                .then()
                .statusCode(404)
                .body(equalTo("Product not found"));
    }
}
